/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\public\Regular.glb 
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'


export function Regular(props) {
  const { nodes, materials } = useGLTF('./Regular.glb')

    const groupRef = useRef()
  
    useEffect(() => {
      if (groupRef.current) {
        const box = new THREE.Box3().setFromObject(groupRef.current)
        const center = box.getCenter(new THREE.Vector3())
        groupRef.current.position.sub(center) // Center the model
      }
    }, [])
  
    useFrame(() => {
      if (groupRef.current) {
        groupRef.current.rotation.y += 0.002 // Rotate the model on its own axis
      }
    })
  return (
    <group {...props} dispose={null} ref={groupRef}>
      <mesh geometry={nodes.Object_0001.geometry} material={materials['Material.002']} position={[0,-2.5,0]} rotation={[Math.PI / 2, 0, Math.PI]} scale={0.065} />
    </group>
  )
}

useGLTF.preload('./Regular.glb')


// [-16.365, -0.612, 1.941]